name: "CI Build"

on:
  workflow_call:
    outputs:
      registry:
        description: "AWS registry where the ECR is located"
        value: ${{ jobs.image_build.outputs.registry }}

jobs:
  image_build:
    name: "Build"
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.ecr-login.outputs.registry }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Configuring AWS credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.ECR_REGION }}

      - name: "Logging into ECR"
        uses: aws-actions/amazon-ecr-login@v2
        id: ecr-login

      - name: "Build & Push to ECR"
        run: |
          
          # ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░
               
          docker image build -t $REGISTRY/$REPOSITORY:fpm-$IMAGE_TAG \
            --build-arg COMPOSER_USER="$COMPOSER_USER"     --build-arg COMPOSER_PASS="$COMPOSER_PASS"   \
            --build-arg ACF_PRO_LICENSE="$ACF_PRO_LICENSE" --build-arg ACF_PRO_PASS="$ACF_PRO_PASS"     \
            --build-arg AS3CF_PRO_USER="$AS3CF_PRO_USER"   --build-arg AS3CF_PRO_PASS="$AS3CF_PRO_PASS" \
            --build-arg IMAGE_TAG="$IMAGE_TAG" \
            --target build-fpm .
          
          docker image build -t $REGISTRY/$REPOSITORY:nginx-$IMAGE_TAG \
            --build-arg COMPOSER_USER="$COMPOSER_USER"     --build-arg COMPOSER_PASS="$COMPOSER_PASS"   \
            --build-arg ACF_PRO_LICENSE="$ACF_PRO_LICENSE" --build-arg ACF_PRO_PASS="$ACF_PRO_PASS"     \
            --build-arg AS3CF_PRO_USER="$AS3CF_PRO_USER"   --build-arg AS3CF_PRO_PASS="$AS3CF_PRO_PASS" \
            --target build-nginx .
          
          docker image build -t $REGISTRY/$REPOSITORY:cron-$IMAGE_TAG \
            --target build-cron .

          docker image build -t $REGISTRY/$REPOSITORY:s3-push-$IMAGE_TAG \
            --build-arg COMPOSER_USER   --build-arg COMPOSER_PASS  \
            --build-arg ACF_PRO_LICENSE --build-arg ACF_PRO_PASS   \
            --build-arg AS3CF_PRO_USER  --build-arg AS3CF_PRO_PASS \
            --build-arg IMAGE_TAG \
            --target build-s3-push .

          # ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░
          
          docker image push $REGISTRY/$REPOSITORY:fpm-$IMAGE_TAG
          docker image push $REGISTRY/$REPOSITORY:nginx-$IMAGE_TAG
          docker image push $REGISTRY/$REPOSITORY:cron-$IMAGE_TAG
          docker image push $REGISTRY/$REPOSITORY:s3-push-$IMAGE_TAG
          
          # ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░  ░░

        env:
          REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
          COMPOSER_USER: ${{ secrets.COMPOSER_USER }}
          COMPOSER_PASS: ${{ secrets.COMPOSER_PASS }}
          ACF_PRO_LICENSE: ${{ secrets.ACF_PRO_LICENSE }}
          ACF_PRO_PASS: ${{ secrets.ACF_PRO_PASS }}
          AS3CF_PRO_USER: ${{ secrets.AS3CF_PRO_USER }}
          AS3CF_PRO_PASS: ${{ secrets.AS3CF_PRO_PASS }}
