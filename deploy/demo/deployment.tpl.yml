apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${KUBE_NAMESPACE}
  namespace: ${KUBE_NAMESPACE}
  labels:
    app: ${KUBE_NAMESPACE}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  selector:
    matchLabels:
      app: ${KUBE_NAMESPACE}
  template:
    metadata:
      labels:
        app: ${KUBE_NAMESPACE}
    spec:
      volumes:
        - name: uploads
          emptyDir: { }
        - name: php-socket
          emptyDir: { }
      terminationGracePeriodSeconds: 35
      serviceAccountName: ${KUBE_NAMESPACE}-service
      containers:
        - name: nginx
          image: ${ECR_URL}:${IMAGE_TAG_NGINX}
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: uploads
              mountPath: /var/www/html/public/app/uploads
            - name: php-socket
              mountPath: /sock
          securityContext:
            runAsUser: 101
          env:
            - name: IPS_FORMATTED
              valueFrom:
                secretKeyRef:
                  name: ${KUBE_NAMESPACE}-base64-secrets
                  key: IPS_FORMATTED

        - name: cron
          image: ${ECR_URL}:${IMAGE_TAG_CRON}
          securityContext:
            runAsUser: 3001

        - name: fpm
          image: ${ECR_URL}:${IMAGE_TAG_FPM}
          volumeMounts:
            - name: uploads
              mountPath: /var/www/html/public/app/uploads
            - name: php-socket
              mountPath: /sock
          securityContext:
            runAsUser: 101
          env:
            - name: AWS_S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: s3-bucket-output
                  key: bucket_name
            - name: AWS_CLOUDFRONT_PUBLIC_KEYS_OBJECT
              valueFrom:
                secretKeyRef:
                  name: cloudfront-output
                  key: cloudfront_public_keys
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: rds-output
                  key: rds_instance_address
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: rds-output
                  key: database_name
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: rds-output
                  key: database_username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rds-output
                  key: database_password
            - name: OPENSEARCH_URL
              valueFrom:
                secretKeyRef:
                  name: opensearch-output
                  key: proxy_url
            - name: BASIC_AUTH
              valueFrom:
                secretKeyRef:
                  name: basic-auth-secret
                  key: auth          
          envFrom:
            - configMapRef:
                name: ${KUBE_NAMESPACE}
            - secretRef:
                name: ${KUBE_NAMESPACE}-secrets
            - secretRef:
                name: ${KUBE_NAMESPACE}-base64-secrets
