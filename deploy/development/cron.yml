apiVersion: batch/v1
kind: CronJob
metadata:
  name: wp-cron-trigger
  namespace: intranet-dev
  labels:
    app: intranet-dev
    component: cron-trigger
spec:
  schedule: "* 6-21 * * *" # Every minute, between 6am and 9:59pm
  failedJobsHistoryLimit: 10  # Keep last 10 failed jobs
  successfulJobsHistoryLimit: 1  # Keep last 1 successful job
  jobTemplate:
    metadata:
      labels:
        app: intranet-dev
        component: cron-trigger
    spec:
      backoffLimit: 0 # Ensures no retries on failure
      template:
        metadata:
          labels:
            app: intranet-dev
            component: cron-trigger
        spec:
          securityContext:
            runAsNonRoot: true
            runAsUser: 3001
            runAsGroup: 3001
            seccompProfile:
              type: "RuntimeDefault"
          restartPolicy: Never
          containers:
          - name: wp-cron
            image: alpine:latest
            command:
              - /bin/sh
              - -c
              - |
                # Capture both HTTP response headers and any error output from wget
                response=$(wget --spider --server-response --quiet "nginx-service:8080/wp/wp-cron.php?doing_wp_cron" 2>&1)
                
                # Check if wget command failed (non-zero exit code)
                if [ $? -ne 0 ]; then
                  # Log detailed error information including HTTP status and any connection issues
                  echo "ERROR: wp-cron failed - $response" >&2
                  exit 1
                fi
                
                # Success - wp-cron triggered successfully with HTTP 200
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: 
                drop: ["ALL"]
              readOnlyRootFilesystem: true
            resources:
              limits:
                cpu: 50m
                memory: 50Mi
              requests:
                cpu: 10m
                memory: 20Mi
